lockVersion: 2.0.0
id: 82df1e5d-b6ea-4e02-ac0f-abaa4eefdb64
management:
  docChecksum: 139821cf7f3e3ea12c495336b7dda4df
  docVersion: "0.81"
  speakeasyVersion: 1.501.0
  generationVersion: 2.522.1
  releaseVersion: 0.20.2
  configChecksum: c8d64e99699944f92d9341441c80a2ef
  repoURL: https://github.com/mixpeek/python-sdk.git
  installationURL: https://github.com/mixpeek/python-sdk.git
  published: true
features:
  python:
    additionalDependencies: 1.0.0
    additionalProperties: 1.0.1
    constsAndDefaults: 1.0.5
    core: 5.12.1
    defaultEnabledRetries: 0.2.0
    devContainers: 3.0.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.3.2
    flatRequests: 1.0.1
    flattening: 3.1.1
    globalSecurity: 3.0.3
    globalSecurityCallbacks: 1.0.0
    globalSecurityFlattening: 1.0.0
    globalServerURLs: 3.1.0
    globals: 3.0.0
    groups: 3.0.0
    methodArguments: 1.0.2
    nameOverrides: 3.0.1
    nullables: 1.0.1
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.0.1
    unions: 3.0.4
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .python-version
  - .vscode/settings.json
  - USAGE.md
  - docs/models/actionusage.md
  - docs/models/and_.md
  - docs/models/apikey.md
  - docs/models/apikeyupdate.md
  - docs/models/assetfeatures.md
  - docs/models/assetresponse.md
  - docs/models/assetsmodelsearchquery.md
  - docs/models/assetupdate.md
  - docs/models/assignmentconfig.md
  - docs/models/assignmentmode.md
  - docs/models/availablemodels.md
  - docs/models/availablemodelsresponse.md
  - docs/models/boolindexparams.md
  - docs/models/classificationmatch.md
  - docs/models/classificationwithfeature.md
  - docs/models/classifyfeaturesv1entitiestaxonomiestaxonomyclassifypostrequest.md
  - docs/models/collectiondetailsresponse.md
  - docs/models/collectiondetailsresponsemetadata.md
  - docs/models/collectionmodel.md
  - docs/models/collectionmodelmetadata.md
  - docs/models/collectionresult.md
  - docs/models/collectionresultmetadata.md
  - docs/models/createapikeyv1organizationsusersuseremailapikeyspostrequest.md
  - docs/models/createcollectionrequest.md
  - docs/models/createcollectionrequestmetadata.md
  - docs/models/createcollectionv1collectionspostrequest.md
  - docs/models/createnamespacerequest.md
  - docs/models/createtaxonomyv1entitiestaxonomiespostrequest.md
  - docs/models/datetimeindexparams.md
  - docs/models/dateusage.md
  - docs/models/dbmodelpaginationresponse.md
  - docs/models/deleteapikeyv1organizationsusersuseremailapikeyskeynamedeleterequest.md
  - docs/models/deleteassetv1assetsassetiddeleterequest.md
  - docs/models/deleteclassificationsv1entitiestaxonomiestaxonomyclassificationsclassificationiddeleterequest.md
  - docs/models/deletecollectionv1collectionscollectiondeleterequest.md
  - docs/models/deletefeaturev1featuresfeatureiddeleterequest.md
  - docs/models/deletenamespacev1namespacesnamespacedeleterequest.md
  - docs/models/deletetaxonomyv1entitiestaxonomiestaxonomydeleterequest.md
  - docs/models/deleteuserv1organizationsusersuseremaildeleterequest.md
  - docs/models/denseembedding.md
  - docs/models/details.md
  - docs/models/direction.md
  - docs/models/discoverrequest.md
  - docs/models/embedding.md
  - docs/models/embeddingconfig.md
  - docs/models/embeddingconfigtype.md
  - docs/models/embeddingrequest.md
  - docs/models/embeddingresponse.md
  - docs/models/entitysettings.md
  - docs/models/errordetail.md
  - docs/models/errorresponse.md
  - docs/models/featureextractionembeddingrequest.md
  - docs/models/featureoptions.md
  - docs/models/featureresponse.md
  - docs/models/featuresmodelpaginationresponse.md
  - docs/models/featureupdaterequest.md
  - docs/models/featureupdaterequestmetadata.md
  - docs/models/fieldschema.md
  - docs/models/filedata.md
  - docs/models/filtercondition.md
  - docs/models/floatindexparams.md
  - docs/models/fullassetupdatev1assetsassetidputrequest.md
  - docs/models/fullfeatureupdatev1featuresfeatureidputrequest.md
  - docs/models/genericsuccessresponse.md
  - docs/models/geoindexparams.md
  - docs/models/getassetv1assetsassetidgetrequest.md
  - docs/models/getassetwithfeaturesv1assetsassetidfeaturesgetrequest.md
  - docs/models/getcollectiondetailsv1collectionscollectiongetrequest.md
  - docs/models/getfeaturev1featuresfeatureidgetrequest.md
  - docs/models/getnamespacev1namespacesnamespacegetrequest.md
  - docs/models/gettaskv1taskstaskidgetrequest.md
  - docs/models/gettaxonomynodev1entitiestaxonomiesnodesnodegetrequest.md
  - docs/models/gettaxonomyv1entitiestaxonomiestaxonomygetrequest.md
  - docs/models/getuserv1organizationsusersuseremailgetrequest.md
  - docs/models/groupbyoptions.md
  - docs/models/groupbyoptionsasset.md
  - docs/models/groupedassetdata.md
  - docs/models/healthcheckresponse.md
  - docs/models/httpvalidationerror.md
  - docs/models/imagedescribesettings.md
  - docs/models/imagedescribesettingsjsonoutput.md
  - docs/models/imagedetectsettings.md
  - docs/models/imagereadsettings.md
  - docs/models/imagereadsettingsjsonoutput.md
  - docs/models/imagesettings.md
  - docs/models/ingestimageurlv1ingestimagesurlpostrequest.md
  - docs/models/ingesttextv1ingesttextpostrequest.md
  - docs/models/ingestvideourlv1ingestvideosurlpostrequest.md
  - docs/models/inputtype.md
  - docs/models/integerindexparams.md
  - docs/models/internal/globals.md
  - docs/models/jsonimageoutputsettings.md
  - docs/models/jsonimageoutputsettingsresponseshape.md
  - docs/models/jsonoutput.md
  - docs/models/jsontextoutputsettings.md
  - docs/models/jsonvideooutputsettings.md
  - docs/models/jsonvideooutputsettingsresponseshape.md
  - docs/models/keywordindexparams.md
  - docs/models/killtaskv1taskstaskiddeleterequest.md
  - docs/models/listactivetasksv1tasksgetrequest.md
  - docs/models/listassetsrequest.md
  - docs/models/listassetsresponse.md
  - docs/models/listassetsv1assetspostrequest.md
  - docs/models/listclassificationsrequest.md
  - docs/models/listclassificationsresponse.md
  - docs/models/listclassificationsv1entitiestaxonomiestaxonomyclassificationspostrequest.md
  - docs/models/listcollectionsresponse.md
  - docs/models/listcollectionsv1collectionsgetrequest.md
  - docs/models/listfeaturesrequest.md
  - docs/models/listfeaturesresponse.md
  - docs/models/listfeaturesv1featurespostrequest.md
  - docs/models/listtasksresponse.md
  - docs/models/listtaxonomiesresponse.md
  - docs/models/listtaxonomiesv1entitiestaxonomiesgetrequest.md
  - docs/models/loc.md
  - docs/models/logicaloperator.md
  - docs/models/logodetectsettings.md
  - docs/models/metadata.md
  - docs/models/modality.md
  - docs/models/mode.md
  - docs/models/modeldetails.md
  - docs/models/namespaceresponse.md
  - docs/models/nodeoptions.md
  - docs/models/nodeupdate.md
  - docs/models/nor.md
  - docs/models/operator.md
  - docs/models/or_.md
  - docs/models/organizationmodel.md
  - docs/models/organizationmodelmetadata.md
  - docs/models/partialassetupdatev1assetsassetidpatchrequest.md
  - docs/models/patchnamespacev1namespacesnamespacepatchrequest.md
  - docs/models/payloadindexconfig.md
  - docs/models/payloadindextype.md
  - docs/models/payloadschematype.md
  - docs/models/permission.md
  - docs/models/processimageurlinput.md
  - docs/models/processimageurlinputmetadata.md
  - docs/models/processtextinput.md
  - docs/models/processtextinputmetadata.md
  - docs/models/processvideourlinput.md
  - docs/models/processvideourlinputmetadata.md
  - docs/models/querysettings.md
  - docs/models/rerankingoptions.md
  - docs/models/responseshape.md
  - docs/models/searchassetsrequest.md
  - docs/models/searchassetsv1assetssearchpostrequest.md
  - docs/models/searchfeaturesv1featuressearchpostrequest.md
  - docs/models/searchfeaturesv1featuressearchpostresponsesearchfeaturesv1featuressearchpost.md
  - docs/models/searchmodelsearchquery.md
  - docs/models/searchrequestfeatures.md
  - docs/models/security.md
  - docs/models/sortoption.md
  - docs/models/sparseembedding.md
  - docs/models/taskresponse.md
  - docs/models/taskstatus.md
  - docs/models/taxonomycreate.md
  - docs/models/taxonomyextractionconfig.md
  - docs/models/taxonomymodel.md
  - docs/models/taxonomynode.md
  - docs/models/taxonomynodecreate.md
  - docs/models/taxonomyupdate.md
  - docs/models/textindexparams.md
  - docs/models/textsettings.md
  - docs/models/tokenizertype.md
  - docs/models/type.md
  - docs/models/updateapikeyv1organizationsusersuseremailapikeyskeynamepatchrequest.md
  - docs/models/updateassetrequest.md
  - docs/models/updateassetrequestmetadata.md
  - docs/models/updatecollectionv1collectionscollectionputrequest.md
  - docs/models/updatenamespacerequest.md
  - docs/models/updatenamespacev1namespacesnamespaceputrequest.md
  - docs/models/updatenodev1entitiestaxonomiesnodesnodepatchrequest.md
  - docs/models/updatetaxonomyv1entitiestaxonomiestaxonomypatchrequest.md
  - docs/models/usage.md
  - docs/models/usermodelinput.md
  - docs/models/usermodelinputmetadata.md
  - docs/models/usermodeloutput.md
  - docs/models/usermodeloutputmetadata.md
  - docs/models/utils/retryconfig.md
  - docs/models/uuidindexparams.md
  - docs/models/validationerror.md
  - docs/models/vectormodel.md
  - docs/models/vectortype.md
  - docs/models/videodescribesettings.md
  - docs/models/videodescribesettingsjsonoutput.md
  - docs/models/videodetectsettings.md
  - docs/models/videoreadsettings.md
  - docs/models/videosettings.md
  - docs/models/videotranscriptionsettings.md
  - docs/models/videotranscriptionsettingsjsonoutput.md
  - docs/sdks/assets/README.md
  - docs/sdks/collections/README.md
  - docs/sdks/featureextractors/README.md
  - docs/sdks/features/README.md
  - docs/sdks/health/README.md
  - docs/sdks/ingestassets/README.md
  - docs/sdks/mixpeek/README.md
  - docs/sdks/namespaces/README.md
  - docs/sdks/organizations/README.md
  - docs/sdks/tasks/README.md
  - docs/sdks/taxonomies/README.md
  - docs/sdks/taxonomyentities/README.md
  - docs/sdks/users/README.md
  - poetry.toml
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/prepare-readme.py
  - scripts/publish.sh
  - src/mixpeek/__init__.py
  - src/mixpeek/_hooks/__init__.py
  - src/mixpeek/_hooks/sdkhooks.py
  - src/mixpeek/_hooks/types.py
  - src/mixpeek/_version.py
  - src/mixpeek/assets.py
  - src/mixpeek/basesdk.py
  - src/mixpeek/collections.py
  - src/mixpeek/featureextractors.py
  - src/mixpeek/features.py
  - src/mixpeek/health.py
  - src/mixpeek/httpclient.py
  - src/mixpeek/ingestassets.py
  - src/mixpeek/models/__init__.py
  - src/mixpeek/models/actionusage.py
  - src/mixpeek/models/apierror.py
  - src/mixpeek/models/apikey.py
  - src/mixpeek/models/apikeyupdate.py
  - src/mixpeek/models/assetfeatures.py
  - src/mixpeek/models/assetresponse.py
  - src/mixpeek/models/assets_model_searchquery.py
  - src/mixpeek/models/assetupdate.py
  - src/mixpeek/models/assignmentconfig.py
  - src/mixpeek/models/assignmentmode.py
  - src/mixpeek/models/availablemodels.py
  - src/mixpeek/models/availablemodelsresponse.py
  - src/mixpeek/models/boolindexparams.py
  - src/mixpeek/models/classificationmatch.py
  - src/mixpeek/models/classificationwithfeature.py
  - src/mixpeek/models/classify_features_v1_entities_taxonomies_taxonomy_classify_postop.py
  - src/mixpeek/models/collectiondetailsresponse.py
  - src/mixpeek/models/collectionmodel.py
  - src/mixpeek/models/collectionresult.py
  - src/mixpeek/models/create_api_key_v1_organizations_users_user_email_api_keys_postop.py
  - src/mixpeek/models/create_collection_v1_collections_postop.py
  - src/mixpeek/models/create_taxonomy_v1_entities_taxonomies_postop.py
  - src/mixpeek/models/createcollectionrequest.py
  - src/mixpeek/models/createnamespacerequest.py
  - src/mixpeek/models/datetimeindexparams.py
  - src/mixpeek/models/dateusage.py
  - src/mixpeek/models/db_model_paginationresponse.py
  - src/mixpeek/models/delete_api_key_v1_organizations_users_user_email_api_keys_key_name_deleteop.py
  - src/mixpeek/models/delete_asset_v1_assets_asset_id_deleteop.py
  - src/mixpeek/models/delete_classifications_v1_entities_taxonomies_taxonomy_classifications_classification_id_deleteop.py
  - src/mixpeek/models/delete_collection_v1_collections_collection_deleteop.py
  - src/mixpeek/models/delete_feature_v1_features_feature_id_deleteop.py
  - src/mixpeek/models/delete_namespace_v1_namespaces_namespace_deleteop.py
  - src/mixpeek/models/delete_taxonomy_v1_entities_taxonomies_taxonomy_deleteop.py
  - src/mixpeek/models/delete_user_v1_organizations_users_user_email_deleteop.py
  - src/mixpeek/models/denseembedding.py
  - src/mixpeek/models/discoverrequest.py
  - src/mixpeek/models/embeddingconfig.py
  - src/mixpeek/models/embeddingrequest.py
  - src/mixpeek/models/embeddingresponse.py
  - src/mixpeek/models/entitysettings.py
  - src/mixpeek/models/errordetail.py
  - src/mixpeek/models/errorresponse.py
  - src/mixpeek/models/featureextractionembeddingrequest.py
  - src/mixpeek/models/featureoptions.py
  - src/mixpeek/models/featureresponse.py
  - src/mixpeek/models/features_model_paginationresponse.py
  - src/mixpeek/models/featureupdaterequest.py
  - src/mixpeek/models/filtercondition.py
  - src/mixpeek/models/floatindexparams.py
  - src/mixpeek/models/full_asset_update_v1_assets_asset_id_putop.py
  - src/mixpeek/models/full_feature_update_v1_features_feature_id_putop.py
  - src/mixpeek/models/genericsuccessresponse.py
  - src/mixpeek/models/geoindexparams.py
  - src/mixpeek/models/get_asset_v1_assets_asset_id_getop.py
  - src/mixpeek/models/get_asset_with_features_v1_assets_asset_id_features_getop.py
  - src/mixpeek/models/get_collection_details_v1_collections_collection_getop.py
  - src/mixpeek/models/get_feature_v1_features_feature_id_getop.py
  - src/mixpeek/models/get_namespace_v1_namespaces_namespace_getop.py
  - src/mixpeek/models/get_task_v1_tasks_task_id_getop.py
  - src/mixpeek/models/get_taxonomy_node_v1_entities_taxonomies_nodes_node_getop.py
  - src/mixpeek/models/get_taxonomy_v1_entities_taxonomies_taxonomy_getop.py
  - src/mixpeek/models/get_user_v1_organizations_users_user_email_getop.py
  - src/mixpeek/models/groupbyoptions.py
  - src/mixpeek/models/groupbyoptionsasset.py
  - src/mixpeek/models/groupedassetdata.py
  - src/mixpeek/models/healthcheckresponse.py
  - src/mixpeek/models/httpvalidationerror.py
  - src/mixpeek/models/imagedescribesettings.py
  - src/mixpeek/models/imagedetectsettings.py
  - src/mixpeek/models/imagereadsettings.py
  - src/mixpeek/models/imagesettings.py
  - src/mixpeek/models/ingest_image_url_v1_ingest_images_url_postop.py
  - src/mixpeek/models/ingest_text_v1_ingest_text_postop.py
  - src/mixpeek/models/ingest_video_url_v1_ingest_videos_url_postop.py
  - src/mixpeek/models/inputtype.py
  - src/mixpeek/models/integerindexparams.py
  - src/mixpeek/models/internal/__init__.py
  - src/mixpeek/models/internal/globals.py
  - src/mixpeek/models/jsonimageoutputsettings.py
  - src/mixpeek/models/jsontextoutputsettings.py
  - src/mixpeek/models/jsonvideooutputsettings.py
  - src/mixpeek/models/keywordindexparams.py
  - src/mixpeek/models/kill_task_v1_tasks_task_id_deleteop.py
  - src/mixpeek/models/list_active_tasks_v1_tasks_getop.py
  - src/mixpeek/models/list_assets_v1_assets_postop.py
  - src/mixpeek/models/list_classifications_v1_entities_taxonomies_taxonomy_classifications_postop.py
  - src/mixpeek/models/list_collections_v1_collections_getop.py
  - src/mixpeek/models/list_features_v1_features_postop.py
  - src/mixpeek/models/list_taxonomies_v1_entities_taxonomies_getop.py
  - src/mixpeek/models/listassetsrequest.py
  - src/mixpeek/models/listassetsresponse.py
  - src/mixpeek/models/listclassificationsrequest.py
  - src/mixpeek/models/listclassificationsresponse.py
  - src/mixpeek/models/listcollectionsresponse.py
  - src/mixpeek/models/listfeaturesrequest.py
  - src/mixpeek/models/listfeaturesresponse.py
  - src/mixpeek/models/listtasksresponse.py
  - src/mixpeek/models/listtaxonomiesresponse.py
  - src/mixpeek/models/logicaloperator.py
  - src/mixpeek/models/logodetectsettings.py
  - src/mixpeek/models/modality.py
  - src/mixpeek/models/modeldetails.py
  - src/mixpeek/models/namespaceresponse.py
  - src/mixpeek/models/nodeoptions.py
  - src/mixpeek/models/nodeupdate.py
  - src/mixpeek/models/organizationmodel.py
  - src/mixpeek/models/partial_asset_update_v1_assets_asset_id_patchop.py
  - src/mixpeek/models/patch_namespace_v1_namespaces_namespace_patchop.py
  - src/mixpeek/models/payloadindexconfig.py
  - src/mixpeek/models/payloadindextype.py
  - src/mixpeek/models/payloadschematype.py
  - src/mixpeek/models/permission.py
  - src/mixpeek/models/processimageurlinput.py
  - src/mixpeek/models/processtextinput.py
  - src/mixpeek/models/processvideourlinput.py
  - src/mixpeek/models/querysettings.py
  - src/mixpeek/models/rerankingoptions.py
  - src/mixpeek/models/search_assets_v1_assets_search_postop.py
  - src/mixpeek/models/search_features_v1_features_search_postop.py
  - src/mixpeek/models/search_model_searchquery.py
  - src/mixpeek/models/searchassetsrequest.py
  - src/mixpeek/models/searchrequestfeatures.py
  - src/mixpeek/models/security.py
  - src/mixpeek/models/sortoption.py
  - src/mixpeek/models/sparseembedding.py
  - src/mixpeek/models/taskresponse.py
  - src/mixpeek/models/taskstatus.py
  - src/mixpeek/models/taxonomycreate.py
  - src/mixpeek/models/taxonomyextractionconfig.py
  - src/mixpeek/models/taxonomymodel.py
  - src/mixpeek/models/taxonomynode.py
  - src/mixpeek/models/taxonomynodecreate.py
  - src/mixpeek/models/taxonomyupdate.py
  - src/mixpeek/models/textindexparams.py
  - src/mixpeek/models/textsettings.py
  - src/mixpeek/models/tokenizertype.py
  - src/mixpeek/models/update_api_key_v1_organizations_users_user_email_api_keys_key_name_patchop.py
  - src/mixpeek/models/update_collection_v1_collections_collection_putop.py
  - src/mixpeek/models/update_namespace_v1_namespaces_namespace_putop.py
  - src/mixpeek/models/update_node_v1_entities_taxonomies_nodes_node_patchop.py
  - src/mixpeek/models/update_taxonomy_v1_entities_taxonomies_taxonomy_patchop.py
  - src/mixpeek/models/updateassetrequest.py
  - src/mixpeek/models/updatenamespacerequest.py
  - src/mixpeek/models/usage.py
  - src/mixpeek/models/usermodel_input.py
  - src/mixpeek/models/usermodel_output.py
  - src/mixpeek/models/uuidindexparams.py
  - src/mixpeek/models/validationerror.py
  - src/mixpeek/models/vectormodel.py
  - src/mixpeek/models/vectortype.py
  - src/mixpeek/models/videodescribesettings.py
  - src/mixpeek/models/videodetectsettings.py
  - src/mixpeek/models/videoreadsettings.py
  - src/mixpeek/models/videosettings.py
  - src/mixpeek/models/videotranscriptionsettings.py
  - src/mixpeek/namespaces.py
  - src/mixpeek/organizations.py
  - src/mixpeek/py.typed
  - src/mixpeek/sdk.py
  - src/mixpeek/sdkconfiguration.py
  - src/mixpeek/tasks.py
  - src/mixpeek/taxonomies.py
  - src/mixpeek/taxonomyentities.py
  - src/mixpeek/types/__init__.py
  - src/mixpeek/types/basemodel.py
  - src/mixpeek/users.py
  - src/mixpeek/utils/__init__.py
  - src/mixpeek/utils/annotations.py
  - src/mixpeek/utils/enums.py
  - src/mixpeek/utils/eventstreaming.py
  - src/mixpeek/utils/forms.py
  - src/mixpeek/utils/headers.py
  - src/mixpeek/utils/logger.py
  - src/mixpeek/utils/metadata.py
  - src/mixpeek/utils/queryparams.py
  - src/mixpeek/utils/requestbodies.py
  - src/mixpeek/utils/retries.py
  - src/mixpeek/utils/security.py
  - src/mixpeek/utils/serializers.py
  - src/mixpeek/utils/url.py
  - src/mixpeek/utils/values.py
examples:
  healthcheck_healthcheck_get:
    speakeasy-default-healthcheck-healthcheck-get:
      responses:
        "200":
          application/json: {"status": "<value>"}
  get_organization_v1_organizations_get:
    speakeasy-default-get-organization-v1-organizations-get:
      responses:
        "200":
          application/json: {"organization_name": "<value>", "account_type": "free", "credit_count": 1000}
        "400":
          application/json: {"success": false, "status": 441424, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 252499, "error": {"message": "<value>", "type": "<value>"}}
  get_usage_v1_organizations_usage_get:
    speakeasy-default-get-usage-v1-organizations-usage-get:
      responses:
        "200":
          application/json: {"total_credits": 998093, "dates": [{"date": "2024-10-04", "credits": 106421, "actions": [{"action": "<value>", "credits": 10756}, {"action": "<value>", "credits": 835779}, {"action": "<value>", "credits": 414089}]}]}
        "400":
          application/json: {"success": false, "status": 606141, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 939273, "error": {"message": "<value>", "type": "<value>"}}
  get_user_v1_organizations_users__user_email__get:
    speakeasy-default-get-user-v1-organizations-users-user-email-get:
      parameters:
        path:
          user_email: "<value>"
      responses:
        "200":
          application/json: {"email": "Gilberto37@hotmail.com"}
        "400":
          application/json: {"success": false, "status": 946032, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 345757, "error": {"message": "<value>", "type": "<value>"}}
  delete_user_v1_organizations_users__user_email__delete:
    speakeasy-default-delete-user-v1-organizations-users-user-email-delete:
      parameters:
        path:
          user_email: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "400":
          application/json: {"success": false, "status": 234836, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 330067, "error": {"message": "<value>", "type": "<value>"}}
  add_user_v1_organizations_users_post:
    speakeasy-default-add-user-v1-organizations-users-post:
      requestBody:
        application/json: {"email": "Wendell_Larson94@hotmail.com"}
      responses:
        "200":
          application/json: {"email": "Shakira.Feest@hotmail.com"}
        "400":
          application/json: {"success": false, "status": 274044, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 980189, "error": {"message": "<value>", "type": "<value>"}}
  create_api_key_v1_organizations_users__user_email__api_keys_post:
    speakeasy-default-create-api-key-v1-organizations-users-user-email-api-keys-post:
      parameters:
        path:
          user_email: "<value>"
        query:
          key_name: "default"
      responses:
        "200":
          application/json: {}
        "400":
          application/json: {"success": false, "status": 834061, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 801493, "error": {"message": "<value>", "type": "<value>"}}
  delete_api_key_v1_organizations_users__user_email__api_keys__key_name__delete:
    speakeasy-default-delete-api-key-v1-organizations-users-user-email-api-keys-key-name-delete:
      parameters:
        path:
          user_email: "<value>"
          key_name: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "400":
          application/json: {"success": false, "status": 235068, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 711814, "error": {"message": "<value>", "type": "<value>"}}
  update_api_key_v1_organizations_users__user_email__api_keys__key_name__patch:
    speakeasy-default-update-api-key-v1-organizations-users-user-email-api-keys-key-name-patch:
      parameters:
        path:
          user_email: "<value>"
          key_name: "<value>"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {}
        "400":
          application/json: {"success": false, "status": 490703, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 184222, "error": {"message": "<value>", "type": "<value>"}}
  create_namespace_v1_namespaces_post:
    speakeasy-default-create-namespace-v1-namespaces-post:
      requestBody:
        application/json: {"namespace_name": "spotify_playlists_dev", "embedding_models": ["image", "multimodal", "text", "keyword"], "payload_indexes": [{"field_name": "metadata.title", "type": "text", "field_schema": {"type": "text", "tokenizer": "word", "min_token_len": 2, "max_token_len": 15, "lowercase": true}}, {"field_name": "metadata.description", "type": "keyword", "field_schema": {"type": "keyword", "is_tenant": false}}]}
      responses:
        "200":
          application/json: {"namespace_id": "<id>", "namespace_name": "<value>", "embedding_models": ["<value>", "<value>"], "payload_indexes": ["<value>", "<value>"]}
        "400":
          application/json: {"success": false, "status": 97273, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 970213, "error": {"message": "<value>", "type": "<value>"}}
  list_namespaces_v1_namespaces_get:
    speakeasy-default-list-namespaces-v1-namespaces-get:
      responses:
        "200":
          application/json: [{"namespace_id": "<id>", "namespace_name": "<value>", "embedding_models": ["<value>", "<value>", "<value>"], "payload_indexes": []}]
        "400":
          application/json: {"success": false, "status": 82280, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 237137, "error": {"message": "<value>", "type": "<value>"}}
  delete_namespace_v1_namespaces__namespace__delete:
    speakeasy-default-delete-namespace-v1-namespaces-namespace-delete:
      parameters:
        path:
          namespace: "ns_1234567890"
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 469804, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 371711, "error": {"message": "<value>", "type": "<value>"}}
  update_namespace_v1_namespaces__namespace__put:
    speakeasy-default-update-namespace-v1-namespaces-namespace-put:
      parameters:
        path:
          namespace: "ns_1234567890"
      requestBody:
        application/json: {"namespace_name": "spotify_playlists_dev", "payload_indexes": [{"field_name": "metadata.title", "type": "text", "field_schema": {"type": "text", "tokenizer": "word", "min_token_len": 2, "max_token_len": 15, "lowercase": true}}, {"field_name": "metadata.description", "type": "keyword", "field_schema": {"type": "keyword", "is_tenant": false}}]}
      responses:
        "200":
          application/json: {"namespace_id": "<id>", "namespace_name": "<value>", "embedding_models": ["<value>", "<value>", "<value>"], "payload_indexes": []}
        "400":
          application/json: {"success": false, "status": 366934, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 7586, "error": {"message": "<value>", "type": "<value>"}}
  get_namespace_v1_namespaces__namespace__get:
    speakeasy-default-get-namespace-v1-namespaces-namespace-get:
      parameters:
        path:
          namespace: "ns_1234567890"
      responses:
        "200":
          application/json: {"namespace_id": "<id>", "namespace_name": "<value>", "embedding_models": ["<value>", "<value>"], "payload_indexes": ["<value>", "<value>", "<value>"]}
        "400":
          application/json: {"success": false, "status": 449425, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 56837, "error": {"message": "<value>", "type": "<value>"}}
  list_available_models_v1_namespaces_models_get:
    speakeasy-default-list-available-models-v1-namespaces-models-get:
      responses:
        "200":
          application/json: {"embedding_models": {"multimodal": {"supported_modalities": ["text", "image"], "vector_type": "dense", "size": 512}, "text": {"supported_modalities": ["text", "image"], "vector_type": "dense", "size": 512}}, "payload_indexes": [{"type": "keyword"}, {"type": "integer"}, {"type": "text"}]}
        "400":
          application/json: {"success": false, "status": 700624, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 623763, "error": {"message": "<value>", "type": "<value>"}}
  get_feature_v1_features__feature_id__get:
    speakeasy-default-get-feature-v1-features-feature-id-get:
      parameters:
        path:
          feature_id: "<id>"
        query: {}
        header: {}
      responses:
        "200":
          application/json: {"key": "<value>", "key1": "<value>", "key2": "<value>"}
        "400":
          application/json: {"success": false, "status": 80595, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 48222, "error": {"message": "<value>", "type": "<value>"}}
  delete_feature_v1_features__feature_id__delete:
    speakeasy-default-delete-feature-v1-features-feature-id-delete:
      parameters:
        path:
          feature_id: "<id>"
        header: {}
      responses:
        "200":
          application/json: {"message": "<value>", "success": true}
        "400":
          application/json: {"success": false, "status": 763083, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 626532, "error": {"message": "<value>", "type": "<value>"}}
  full_feature_update_v1_features__feature_id__put:
    speakeasy-default-full-feature-update-v1-features-feature-id-put:
      parameters:
        path:
          feature_id: "<id>"
        header: {}
      requestBody:
        application/json: {"metadata": {}}
      responses:
        "200":
          application/json: {"key": "<value>"}
        "400":
          application/json: {"success": false, "status": 915812, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 636088, "error": {"message": "<value>", "type": "<value>"}}
  list_features_v1_features_post:
    speakeasy-default-list-features-v1-features-post:
      parameters:
        query:
          page_size: 10
        header: {}
      requestBody:
        application/json: {"collections": ["collection_123", "my_collection_name"], "filters": {"case_sensitive": true, "AND": [{"key": "name", "value": "John", "operator": "eq"}, {"key": "age", "value": 30, "operator": "gte"}], "OR": [{"key": "status", "value": "active", "operator": "eq"}, {"key": "role", "value": "admin", "operator": "eq"}], "NOR": [{"key": "department", "value": "HR", "operator": "eq"}, {"key": "location", "value": "remote", "operator": "eq"}]}, "sort": {"field": "score", "direction": "desc"}, "select": ["metadata.tags"], "return_urls": false}
      responses:
        "200":
          application/json: {"results": [{"key": "<value>"}], "pagination": {"total": 575076, "page_size": 575245, "total_pages": 583391, "current_page": 10831, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 723909, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 548150, "error": {"message": "<value>", "type": "<value>"}}
  search_features_v1_features_search_post:
    "":
      parameters:
        query:
          offset_position: 0
          page_size: 10
        header: {}
      requestBody:
        application/json: {"queries": [{"embedding_model": "image", "value": "https://example.com/dog.jpg", "type": "url", "settings": {"limit": 50, "min_score": 0.7}}, {"embedding_model": "text", "value": "This is a text query", "type": "text"}], "collections": ["collection1", "collection2"], "filters": {"case_sensitive": true, "AND": [{"key": "name", "value": "John", "operator": "eq"}, {"key": "age", "value": 30, "operator": "gte"}], "OR": [{"key": "status", "value": "active", "operator": "eq"}, {"key": "role", "value": "admin", "operator": "eq"}], "NOR": [{"key": "department", "value": "HR", "operator": "eq"}, {"key": "location", "value": "remote", "operator": "eq"}]}, "group_by": {"field": "asset_id", "max_features": 10, "sort": {"field": "metadata.field_name", "direction": "desc"}}, "sort": {"field": "score", "direction": "desc"}, "select": ["title", "content", "metadata.author", "metadata.publication_date"], "reranking_options": {"weights": {"feedback": 0.7, "popularity": 0.3}, "enable_reranking": false}, "session_id": "sess_abc123", "return_url": true}
      responses:
        "400":
          application/json: {"success": false, "status": 402821, "error": {"message": "<value>", "type": "<value>"}}
        "422": {}
        "500":
          application/json: {"success": false, "status": 262208, "error": {"message": "<value>", "type": "<value>"}}
        "200": {}
  extract_embeddings_v1_features_extractors_embed_post:
    speakeasy-default-extract-embeddings-v1-features-extractors-embed-post:
      requestBody:
        application/json: {"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}
      responses:
        "200":
          application/json: {"embedding": {"indices": [58863], "values": [244.75]}}
        "400":
          application/json: {"success": false, "status": 996580, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 481808, "error": {"message": "<value>", "type": "<value>"}}
  ingest_text_v1_ingest_text_post:
    speakeasy-default-ingest-text-v1-ingest-text-post:
      requestBody:
        application/json: {"collection": "col_1234567890", "feature_extractors": {"embed": [{"type": "text", "value": "a dog", "embedding_model": "multimodal"}], "json_output": {}, "entities": {"taxonomy_extraction": {"taxonomy": "tax_123"}}}}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 699645, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 366871, "error": {"message": "<value>", "type": "<value>"}}
  ingest_video_url_v1_ingest_videos_url_post:
    speakeasy-default-ingest-video-url-v1-ingest-videos-url-post:
      requestBody:
        application/json: {"url": "https://example.com/sample-video.mp4", "collection": "col_1234567890", "feature_extractors": [{"interval_sec": 15, "read": {"enabled": true}, "embed": [{"type": "text", "value": "a dog", "embedding_model": "vertex-multimodal"}], "transcribe": {"enabled": true}, "describe": {"enabled": true}, "detect": {}, "json_output": {}, "entities": {"taxonomy_extraction": {"taxonomy": "tax_123"}}}]}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 731165, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 747801, "error": {"message": "<value>", "type": "<value>"}}
  ingest_image_url_v1_ingest_images_url_post:
    speakeasy-default-ingest-image-url-v1-ingest-images-url-post:
      requestBody:
        application/json: {"url": "https://example.com/sample-video.mp4", "collection": "col_1234567890", "feature_extractors": {"read": {"enabled": true}, "embed": [{"type": "text", "value": "a dog", "embedding_model": "baai-bge-m3"}], "describe": {"enabled": true, "max_length": 1000}, "detect": {}, "json_output": {}, "entities": {"taxonomy_extraction": {"taxonomy": "tax_123"}}}}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 287622, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 260441, "error": {"message": "<value>", "type": "<value>"}}
  create_taxonomy_v1_entities_taxonomies_post:
    speakeasy-default-create-taxonomy-v1-entities-taxonomies-post:
      requestBody:
        application/json: {"taxonomy_name": "electronics", "nodes": [{"node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}]}, {"node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}]}]}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 735189, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 927591, "error": {"message": "<value>", "type": "<value>"}}
  list_taxonomies_v1_entities_taxonomies_get:
    speakeasy-default-list-taxonomies-v1-entities-taxonomies-get:
      parameters:
        query:
          page_size: 10
        header: {}
      responses:
        "200":
          application/json: {"results": [{"taxonomy_id": "tax_abc123xyz", "taxonomy_name": "electronics", "nodes": [{"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "children": [], "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}]}, {"taxonomy_id": "tax_abc123xyz", "taxonomy_name": "electronics", "nodes": [{"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "children": [], "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}]}, {"taxonomy_id": "tax_abc123xyz", "taxonomy_name": "electronics", "nodes": [{"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "children": [], "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}]}], "pagination": {"total": 925831, "page": 676079, "page_size": 33553, "total_pages": 325990, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 408430, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 697675, "error": {"message": "<value>", "type": "<value>"}}
  get_taxonomy_v1_entities_taxonomies__taxonomy__get:
    speakeasy-default-get-taxonomy-v1-entities-taxonomies-taxonomy-get:
      parameters:
        path:
          taxonomy: "<value>"
        header: {}
      responses:
        "200":
          application/json: {"taxonomy_id": "tax_abc123xyz", "taxonomy_name": "electronics", "nodes": [{"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "children": [], "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}]}
        "400":
          application/json: {"success": false, "status": 593425, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 680643, "error": {"message": "<value>", "type": "<value>"}}
  delete_taxonomy_v1_entities_taxonomies__taxonomy__delete:
    speakeasy-default-delete-taxonomy-v1-entities-taxonomies-taxonomy-delete:
      parameters:
        path:
          taxonomy: "<value>"
        header: {}
      responses:
        "200":
          application/json: {"message": "<value>", "success": true}
        "400":
          application/json: {"success": false, "status": 628193, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 427306, "error": {"message": "<value>", "type": "<value>"}}
  update_taxonomy_v1_entities_taxonomies__taxonomy__patch:
    speakeasy-default-update-taxonomy-v1-entities-taxonomies-taxonomy-patch:
      parameters:
        path:
          taxonomy: "<value>"
        header: {}
      requestBody:
        application/json: {"taxonomy_name": "electronics_updated", "description": "Updated electronics taxonomy"}
      responses:
        "200":
          application/json: {"taxonomy_id": "tax_abc123xyz", "taxonomy_name": "electronics", "nodes": [{"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "children": [], "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}]}
        "400":
          application/json: {"success": false, "status": 115509, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 143003, "error": {"message": "<value>", "type": "<value>"}}
  get_taxonomy_node_v1_entities_taxonomies_nodes__node__get:
    speakeasy-default-get-taxonomy-node-v1-entities-taxonomies-nodes-node-get:
      parameters:
        path:
          node: "<value>"
        header: {}
      responses:
        "200":
          application/json: {"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}
        "400":
          application/json: {"success": false, "status": 966201, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 630700, "error": {"message": "<value>", "type": "<value>"}}
  update_node_v1_entities_taxonomies_nodes__node__patch:
    speakeasy-default-update-node-v1-entities-taxonomies-nodes-node-patch:
      parameters:
        path:
          node: "<value>"
        header: {}
      requestBody:
        application/json: {"node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category"}
      responses:
        "200":
          application/json: {"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}
        "400":
          application/json: {"success": false, "status": 869537, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 32799, "error": {"message": "<value>", "type": "<value>"}}
  classify_features_v1_entities_taxonomies__taxonomy__classify_post:
    speakeasy-default-classify-features-v1-entities-taxonomies-taxonomy-classify-post:
      parameters:
        path:
          taxonomy: "<value>"
        header: {}
      requestBody:
        application/json: {"collections": ["<value>", "<value>", "<value>"], "filters": {"case_sensitive": true, "AND": [{"key": "name", "value": "John", "operator": "eq"}, {"key": "age", "value": 30, "operator": "gte"}], "OR": [{"key": "status", "value": "active", "operator": "eq"}, {"key": "role", "value": "admin", "operator": "eq"}], "NOR": [{"key": "department", "value": "HR", "operator": "eq"}, {"key": "location", "value": "remote", "operator": "eq"}]}}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 555572, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 478354, "error": {"message": "<value>", "type": "<value>"}}
  list_classifications_v1_entities_taxonomies__taxonomy__classifications_post:
    speakeasy-default-list-classifications-v1-entities-taxonomies-taxonomy-classifications-post:
      parameters:
        path:
          taxonomy: "<value>"
        query:
          page_size: 10
        header: {}
      requestBody:
        application/json: {"filters": {"case_sensitive": true, "AND": [{"key": "name", "value": "John", "operator": "eq"}, {"key": "age", "value": 30, "operator": "gte"}], "OR": [{"key": "status", "value": "active", "operator": "eq"}, {"key": "role", "value": "admin", "operator": "eq"}], "NOR": [{"key": "department", "value": "HR", "operator": "eq"}, {"key": "location", "value": "remote", "operator": "eq"}]}, "sort": {"field": "score", "direction": "desc"}, "feature_options": {"return_payload": true, "return_url": true}, "node_options": {"return_payload": true}}
      responses:
        "200":
          application/json: {"results": [{"feature_id": "<id>", "classification_id": "<id>", "taxonomy_id": "<id>", "matches": []}, {"feature_id": "<id>", "classification_id": "<id>", "taxonomy_id": "<id>", "matches": [{"taxonomy_id": "<id>", "node_id": "<id>", "node": {"node_id": "node_abc123def456gh", "taxonomy_id": "tax_xyz789", "parent_node_id": "node_123abc456def", "node_name": "electronics_accessories", "node_description": "Electronics accessories and peripherals category", "path_tokens": ["electronics", "accessories", "cables"], "embedding_configs": [{"type": "url", "value": "https://example.com/image.jpg", "embedding_model": "text"}], "order": [1, 2, 3], "depth": 1}, "score": 6021.18, "depth": 1, "order": [1, 2, 3]}]}], "pagination": {"total": 720133, "page": 546255, "page_size": 65555, "total_pages": 17118, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 195554, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 476159, "error": {"message": "<value>", "type": "<value>"}}
  delete_classifications_v1_entities_taxonomies__taxonomy__classifications__classification_id__delete:
    speakeasy-default-delete-classifications-v1-entities-taxonomies-taxonomy-classifications-classification-id-delete:
      parameters:
        path:
          taxonomy: "<value>"
          classification_id: "<id>"
        header: {}
      responses:
        "200":
          application/json: {"message": "<value>", "success": true}
        "400":
          application/json: {"success": false, "status": 62269, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 684818, "error": {"message": "<value>", "type": "<value>"}}
  get_asset_v1_assets__asset_id__get:
    "":
      parameters:
        path:
          asset_id: "ast_123"
        query:
          return_url: true
        header: {}
      responses:
        "200":
          application/json: {"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}
        "400":
          application/json: {"success": false, "status": 15948, "error": {"message": "<value>", "type": "<value>"}}
        "422": {}
        "500":
          application/json: {"success": false, "status": 68409, "error": {"message": "<value>", "type": "<value>"}}
  delete_asset_v1_assets__asset_id__delete:
    speakeasy-default-delete-asset-v1-assets-asset-id-delete:
      parameters:
        path:
          asset_id: "<id>"
        header: {}
      responses:
        "200":
          application/json: {"message": "<value>", "success": true}
        "400":
          application/json: {"success": false, "status": 155071, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 460998, "error": {"message": "<value>", "type": "<value>"}}
  full_asset_update_v1_assets__asset_id__put:
    speakeasy-default-full-asset-update-v1-assets-asset-id-put:
      parameters:
        path:
          asset_id: "<id>"
        header: {}
      requestBody:
        application/json: {"propagate_features": true}
      responses:
        "200":
          application/json: {"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}
        "400":
          application/json: {"success": false, "status": 556461, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 722605, "error": {"message": "<value>", "type": "<value>"}}
  partial_asset_update_v1_assets__asset_id__patch:
    speakeasy-default-partial-asset-update-v1-assets-asset-id-patch:
      parameters:
        path:
          asset_id: "<id>"
        header: {}
      requestBody:
        application/json: {"propagate_features": true}
      responses:
        "200":
          application/json: {"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}
        "400":
          application/json: {"success": false, "status": 134086, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 459166, "error": {"message": "<value>", "type": "<value>"}}
  get_asset_with_features_v1_assets__asset_id__features_get:
    "":
      parameters:
        path:
          asset_id: "asset_123456789"
        query:
          return_url: false
        header: {}
      responses:
        "200":
          application/json: {"asset": {"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}, "features": {}}
        "400":
          application/json: {"success": false, "status": 761028, "error": {"message": "<value>", "type": "<value>"}}
        "422": {}
        "500":
          application/json: {"success": false, "status": 897645, "error": {"message": "<value>", "type": "<value>"}}
  list_assets_v1_assets_post:
    speakeasy-default-list-assets-v1-assets-post:
      parameters:
        query:
          page_size: 10
        header: {}
      requestBody:
        application/json: {"collections": ["col_123", "my_collection"], "filters": {"case_sensitive": true, "AND": [{"key": "name", "value": "John", "operator": "eq"}, {"key": "age", "value": 30, "operator": "gte"}], "OR": [{"key": "status", "value": "active", "operator": "eq"}, {"key": "role", "value": "admin", "operator": "eq"}], "NOR": [{"key": "department", "value": "HR", "operator": "eq"}, {"key": "location", "value": "remote", "operator": "eq"}]}, "group_by": {"field": "asset_id", "max_assets": 10, "sort": {"field": "score", "direction": "desc"}}, "sort": {"field": "score", "direction": "desc"}, "select": ["title", "content", "metadata.author", "metadata.publication_date"], "return_url": true}
      responses:
        "200":
          application/json: {"results": [{"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}, {"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}], "pagination": {"total": 134748, "page": 493994, "page_size": 833111, "total_pages": 739368, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 555566, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 385435, "error": {"message": "<value>", "type": "<value>"}}
  search_assets_v1_assets_search_post:
    speakeasy-default-search-assets-v1-assets-search-post:
      requestBody:
        application/json: {"query": {"key": ["title", "description"], "value": "search term"}, "collections": ["col_123", "my_collection"], "filters": {"case_sensitive": true, "AND": [{"key": "name", "value": "John", "operator": "eq"}, {"key": "age", "value": 30, "operator": "gte"}], "OR": [{"key": "status", "value": "active", "operator": "eq"}, {"key": "role", "value": "admin", "operator": "eq"}], "NOR": [{"key": "department", "value": "HR", "operator": "eq"}, {"key": "location", "value": "remote", "operator": "eq"}]}, "sort": {"field": "score", "direction": "desc"}, "return_url": true}
      responses:
        "200":
          application/json: {"results": [{"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}, {"asset_id": "ast_123", "collection_id": "col_123", "status": "processing", "modality": "image", "task_id": "task123", "file_hash": "hash123", "updated_at": "2023-01-01T00:00:00.000Z", "created_at": "2023-01-01T00:00:00.000Z", "score": 0.5}], "pagination": {"total": 55398, "page": 826364, "page_size": 217286, "total_pages": 822588, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 795180, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 392864, "error": {"message": "<value>", "type": "<value>"}}
  list_collections_v1_collections_get:
    speakeasy-default-list-collections-v1-collections-get:
      parameters:
        query:
          page_size: 10
        header: {}
      responses:
        "200":
          application/json: {"results": [{"collection_id": "<id>"}], "pagination": {"total": 528574, "page": 944272, "page_size": 520228, "total_pages": 815502, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 682508, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 550325, "error": {"message": "<value>", "type": "<value>"}}
  create_collection_v1_collections_post:
    speakeasy-default-create-collection-v1-collections-post:
      requestBody:
        application/json: {"collection_name": "<value>"}
      responses:
        "200":
          application/json: {"collection_name": "<value>"}
        "400":
          application/json: {"success": false, "status": 210546, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 568784, "error": {"message": "<value>", "type": "<value>"}}
  delete_collection_v1_collections__collection__delete:
    speakeasy-default-delete-collection-v1-collections-collection-delete:
      parameters:
        path:
          collection: "col_1234567890"
        header: {}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 348710, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 757695, "error": {"message": "<value>", "type": "<value>"}}
  update_collection_v1_collections__collection__put:
    speakeasy-default-update-collection-v1-collections-collection-put:
      parameters:
        path:
          collection: "col_1234567890"
        header: {}
      requestBody:
        application/json: {"collection_name": "<value>"}
      responses:
        "200":
          application/json: {"collection_name": "<value>"}
        "400":
          application/json: {"success": false, "status": 405534, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 137008, "error": {"message": "<value>", "type": "<value>"}}
  get_collection_v1_collections__collection__get:
    speakeasy-default-get-collection-v1-collections-collection-get:
      parameters:
        path:
          collection: "col_1234567890"
        header: {}
      responses:
        "200":
          application/json: {"collection_name": "<value>"}
        "400":
          application/json: {"success": false, "status": 52108, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 680479, "error": {"message": "<value>", "type": "<value>"}}
  kill_task_v1_tasks__task_id__delete:
    speakeasy-default-kill-task-v1-tasks-task-id-delete:
      parameters:
        path:
          task_id: "<id>"
        header: {}
      responses:
        "200":
          application/json: "<value>"
        "400":
          application/json: {"success": false, "status": 133802, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 558071, "error": {"message": "<value>", "type": "<value>"}}
  get_task_v1_tasks__task_id__get:
    speakeasy-default-get-task-v1-tasks-task-id-get:
      parameters:
        path:
          task_id: "<id>"
        header: {}
      responses:
        "200":
          application/json: {"task_id": "<id>"}
        "400":
          application/json: {"success": false, "status": 153841, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 178897, "error": {"message": "<value>", "type": "<value>"}}
  list_active_tasks_v1_tasks_get:
    speakeasy-default-list-active-tasks-v1-tasks-get:
      parameters:
        query:
          page_size: 10
        header: {}
      responses:
        "200":
          application/json: {"results": [{"task_id": "<id>"}, {"task_id": "<id>"}], "pagination": {"total": 703165, "page": 334588, "page_size": 602059, "total_pages": 415917, "next_page": "<value>", "previous_page": "<value>"}}
        "400":
          application/json: {"success": false, "status": 993501, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 620291, "error": {"message": "<value>", "type": "<value>"}}
  get_openapi_json_openapi_json_get:
    speakeasy-default-get-openapi-json-openapi-json-get:
      responses:
        "200":
          application/json: "<value>"
  get_openapi_yaml_openapi_yaml_get:
    speakeasy-default-get-openapi-yaml-openapi-yaml-get:
      responses:
        "200":
          application/json: "<value>"
  patch_namespace_v1_namespaces__namespace__patch:
    speakeasy-default-patch-namespace-v1-namespaces-namespace-patch:
      parameters:
        path:
          namespace: "ns_1234567890"
      requestBody:
        application/json: {"namespace_name": "spotify_playlists_dev", "payload_indexes": [{"field_name": "metadata.title", "type": "text", "field_schema": {"type": "text", "tokenizer": "word", "min_token_len": 2, "max_token_len": 15, "lowercase": true}}, {"field_name": "metadata.description", "type": "keyword", "field_schema": {"type": "keyword", "is_tenant": false}}]}
      responses:
        "200":
          application/json: {"namespace_id": "<id>", "namespace_name": "<value>", "embedding_models": ["<value>", "<value>"], "payload_indexes": ["<value>", "<value>"]}
        "400":
          application/json: {"success": false, "status": 464197, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 315101, "error": {"message": "<value>", "type": "<value>"}}
  get_collection_details_v1_collections__collection__get:
    speakeasy-default-get-collection-details-v1-collections-collection-get:
      parameters:
        path:
          collection: "col_1234567890"
        header: {}
      responses:
        "200":
          application/json: {"collection_id": "<id>", "collection_name": "<value>"}
        "400":
          application/json: {"success": false, "status": 544221, "error": {"message": "<value>", "type": "<value>"}}
        "422":
          application/json: {}
        "500":
          application/json: {"success": false, "status": 521235, "error": {"message": "<value>", "type": "<value>"}}
examplesVersion: 1.0.0
generatedTests: {}
